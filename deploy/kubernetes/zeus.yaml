apiVersion: apps/v1
kind: Deployment
metadata:
  name: zeus
  namespace: zeus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: zeus
  template:
    metadata:
      labels:
        app: zeus
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - zeus
            topologyKey: kubernetes.io/hostname
      containers:
      - name: zeus
        image: middleware/zeus:v0.0.1
        env:
        - name: JAVA_OPTS
          value: -Xmx1024m -Xms1024m -Dspring.config.location=/cfg/application.yml
        - name: aliyun_logs_logstash
          value: /logs/*
        - name: aliyun_logs_logstash_tags
          value: k8s_resource_type=Deployment,k8s_resource_name=caas-api
        ports:
        - containerPort: 8080
          protocol: TCP
          name: api
        resources:
          requests:
            cpu: 250m
            memory: 512Mi
          limits:
            cpu: "1"
            memory: 2Gi
        volumeMounts:
        - mountPath: /cfg/application.yml
          name: zeus-config
          subPath: application.yml
        - mountPath: /usr/local/zeus-pv
          name: zeus-upload
        - mountPath: /var/run
          name: docker
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /actuator/health
            port: api
            scheme: HTTP
          initialDelaySeconds: 300
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /actuator/health
            port: api
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
      volumes:
      - configMap:
          items:
          - key: application-prd.yml
            path: application.yml
          name: zeus-config
        name: zeus-config
      - emptyDir: {}
        name: zeus-upload
      - hostPath:
          path: /var/run
        name: docker
---
apiVersion: v1
kind: Service
metadata:
  name: zeus
  namespace: zeus
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: zeus
---
apiVersion: v1
data:
  application-prd.yml: |-
    spring:
      datasource:
        username: root # change this
        password: Zeus@Cloud01 # change this
        url: jdbc:mysql://middleware-mysql:3306/middleware_platform?useUnicode=true&characterEncoding=utf-8 # change this
        driver-class-name: com.mysql.cj.jdbc.Driver
      servlet:
        multipart:
          max-file-size: 10GB
          max-request-size: 10GB
      resources:
        static-locations: file:/usr/local/zeus-pv,classpath:/META-INF/resources/,classpath:/resources/,classpath:/static/,classpath:/public/
    mybatis-plus:
      mapper-locations: classpath:mapping/*.xml

    management:
      endpoint:
        health:
          show-components: always
      health:
        elasticsearch:
          enabled: false

    #调用远程服务
    feign:
      hystrix:
        enabled: false

    ribbon:
      #请求处理的超时时间
      ReadTimeout: 10000
      #请求连接的超时时间
      ConnectTimeout: 5000

    k8s:
      namespace:
        protect: default,kube-system,kube-public,caas-system,harbor-system,logging,monitoring,velero
        label: middleware=true
      kubeconfig:
        path: /usr/local/kubeconfig
    system:
      images:
        path: /usr/local/zeus-pv/images/middleware
      upload:
        path: /usr/local/zeus-pv/upload
      overview:
        overall:
          monitor:
            realtime:
              before: 300
              duration: 60
    pagehelper:
      helper-dialect: mysql
      reasonable: true
      support-methods-arguments: true

    license:
      public:
        key: MIICdgIBADANBgkqhkiG9w0BAQEFAASCAmAwggJcAgEAAoGBAIr+NmJD0FCffQNOgas9IU7SyzuuioVIWeVjuI9KOdjCmLfBzsSmMVy0JcfMkV7rP+YpOwXlQiVq2QJlsxyynb2jF7S0HH9Dr356OinoVNieaHsOxXvC6A53DnUhcViHtTxXCIa1ZjqqIiDGgSmSMdLSMNaL/YyJzInXnnGlxpn3AgMBAAECgYBXCoViGheNNaNi+7nmU3zVUNpmwJIMj1eEeGNukEwTeyGKCbuDmJPW+xWhvnDW4Tl92BoXQg+fQP8vKiL1eMGgu7pU2D0X0SJdgNPW5BFYHltnj4sMtEuMGSCUVcrHZ0bGG6Bk4pHhIBm+mLrwKAJ76W4LoLgVsjcNomOFxNlaqQJBAOkl12h8YoSZy+F9wyewMkoI1vRhH/56evNwOl93K77n5PUSptUJ43wVm4QRBC8bnSkr79dwy/5Un3Es9pyr2oUCQQCYndVR82jjX9WlFZoLn+oHYPuOM/PgeJO3PJ0JOriYVZgwguepRwDek1yuOLmgH+J83OxznhWBk7lc9geuG9FLAkEA520NlgSp0g/Lpges2M94C68cl7V1CahQNSa4epyTSstqpK2f9qX7LedQ2FX/vjb92KlpSIQJqWocXj4QiVG49QJALUnpG8CXx6GQzMR0Si7STA5DmBdir6IYc6/RCgQa81mzJ/IwvNMNNv+T6T98FkBf/Z2xrT2kNCeaQjPgY5JtsQJAD7NjonNfh7vV7hGRNmw+2lm+7l9a18A/X3zfl3faGwsQzlqfdNNpvvCe5CsSvNPdTithe7dM6v8Ff1sQsRQUyg==
kind: ConfigMap
metadata:
  name: caas-middleware-config
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: middleware-api
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: middleware-api
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: middleware-api
subjects:
  - kind: ServiceAccount
    name: middleware-api
    namespace: {{ .Release.Namespace | quote }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: middleware-api
rules:
  - apiGroups:
      - '*'
    resources:
      - '*'
    verbs:
      - get
      - list
      - patch
      - update
      - watch
      - create